{"version":3,"sources":["components/AnnouncementListItem.js","components/AnnouncementList.js","components/CreateAnnouncement.js","components/SearchAnnouncements.js","App.js","serviceWorker.js","index.js"],"names":["AnnouncementListItem","props","useState","isEdit","setEdit","isSelected","setSelected","similar","setSimilar","error","setError","title","description","form","setForm","selectListItem","topArr","i","arrayOfannouncements","length","split","some","elemnt","announcement","includes","id","push","changeAnnouncementHandler","event","target","name","value","editAnnouncements","saveAnnouncements","newAnnouncement","date","Date","changeAnnouncements","cancelAnnouncements","className","role","type","placeholder","onChange","onClick","deleteAnnouncements","format","map","item","index","key","selectedAnnouncementSection","AnnouncementList","announcements","CreateAnnouncement","changeFormHandler","now","addAnnouncements","class","SearchAnnouncements","setTitle","onSearch","App","setAnnouncement","filterAnnouncements","setFilterAnnouncements","useEffect","filter","toLowerCase","Object","assign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"mSAGaA,EAAuB,SAACC,GAAW,IAAD,EACnBC,oBAAS,GADU,mBACtCC,EADsC,KAC9BC,EAD8B,OAEXF,oBAAS,GAFE,mBAEtCG,EAFsC,KAE1BC,EAF0B,OAGfJ,mBAAS,CAAC,KAHK,mBAGtCK,EAHsC,KAG7BC,EAH6B,OAInBN,mBAAS,IAJU,mBAItCO,EAJsC,KAI/BC,EAJ+B,OAKrBR,mBAAS,CAC/BS,MAAO,GACPC,YAAa,KAP8B,mBAKtCC,EALsC,KAKhCC,EALgC,KAUvCC,EAAiB,WACrBT,GAAaD,GAGb,IAFA,IAAMW,EAAS,GAENC,EAAI,EAAGA,EAAIhB,EAAMiB,qBAAqBC,OAAQF,IAEnDhB,EAAMiB,qBAAqBD,GAAGN,MAC3BS,MAAM,KACNC,MAAK,SAACC,GAAD,OACJrB,EAAMsB,aAAaZ,MAAMS,MAAM,KAAKI,SAASF,OAEjDrB,EAAMiB,qBAAqBD,GAAGL,YAC3BQ,MAAM,KACNC,MAAK,SAACC,GAAD,OACJrB,EAAMsB,aAAaX,YAAYQ,MAAM,KAAKI,SAASF,OAEvDrB,EAAMiB,qBAAqBD,GAAGQ,KAAOxB,EAAMsB,aAAaE,IAEpDT,EAAOG,OAAS,GAClBH,EAAOU,KAAKzB,EAAMiB,qBAAqBD,IAI7CT,EAAWQ,IAGPW,EAA4B,SAACC,GACjCd,EAAQ,2BAAKD,GAAN,kBAAae,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAGjDC,EAAoB,WACxB5B,GAAQ,IAGJ6B,EAAoB,WACxB,GAAyB,KAArBpB,EAAKD,aAAqC,KAAfC,EAAKF,MAApC,CAIA,IAAMuB,EAAe,2BAChBrB,GADgB,IAEnBsB,KAAM,IAAIC,KACV/B,WAAYA,IAEdJ,EAAMoC,oBAAoBpC,EAAMsB,aAAaE,GAAIS,GACjDxB,EAAS,IACTN,GAAQ,GACRU,EAAQ,CAAEH,MAAO,GAAIC,YAAa,UAXhCF,EAAS,qBAcP4B,EAAsB,WAC1BlC,GAAQ,IA+GV,OACE,wBAAImC,UAAU,wBACZ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UA9GdpC,EA0BH,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,UACZ9B,GACC,yBAAK8B,UAAU,qBAAqBC,KAAK,SACtC/B,GAGL,2BACEgC,KAAK,OACLF,UAAU,eACVG,YAAY,aACZZ,KAAK,QACLC,MAAOlB,EAAKF,MACZgC,SAAUhB,IAEZ,2BACEc,KAAK,OACLF,UAAU,eACVG,YAAY,mBACZZ,KAAK,cACLC,MAAOlB,EAAKD,YACZ+B,SAAUhB,KAGd,yBAAKY,UAAU,UACb,4BACEA,UAAU,8BACVE,KAAK,SACLG,QAASN,GAET,uBAAGC,UAAU,eAEf,4BACEA,UAAU,0BACVE,KAAK,SACLG,QAASX,GAET,uBAAGM,UAAU,0BA7DjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,0BAAMK,QAAS7B,GAAiBd,EAAMsB,aAAaZ,QAErD,yBAAK4B,UAAU,SACb,4BACEA,UAAU,8BACVE,KAAK,SACLG,QAAS,kBAAM3C,EAAM4C,oBAAoB5C,EAAMsB,aAAaE,MAE5D,uBAAGc,UAAU,iBAEf,4BACEA,UAAU,0BACVE,KAAK,SACLG,QAASZ,GAET,uBAAGO,UAAU,oBAmDW,WAClC,GAAIlC,EACF,OACE,yBAAKkC,UAAU,aACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,OACb,8CAAoBtC,EAAMsB,aAAaX,cAEzC,yBAAK2B,UAAU,SAAf,eAEE,kBAAC,IAAD,CAAQO,OAAO,cAAc7C,EAAMsB,aAAaY,QAGpD,yBAAKI,UAAU,oCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OAAf,0BAEF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACZhC,EAAQY,OAAS,EACdZ,EAAQwC,KAAI,SAACC,EAAMC,GAAP,OACV,yBAAKV,UAAU,WAAWW,IAAKD,EAAQD,EAAKvB,IAC1C,yBAAKc,UAAU,SAAf,cAA+BS,EAAKvB,GAApC,MACA,yBAAKc,UAAU,SAAf,iBAAkCS,EAAKrC,YAG3C,iBAeXwC,OCjLEC,EAAmB,SAACnD,GAC/B,OACE,yBAAKsC,UAAU,YACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,cACXtC,EAAMoD,cAAcN,KAAI,SAACxB,GACxB,OACE,kBAAC,EAAD,CACEL,qBAAsBjB,EAAMoD,cAC5B9B,aAAcA,EACd2B,IAAK3B,EAAaE,GAClBQ,kBAAmBhC,EAAMgC,kBACzBY,oBAAqB5C,EAAM4C,oBAC3BR,oBAAqBpC,EAAMoC,6BCd9BiB,EAAqB,SAACrD,GAAW,IAAD,EACnBC,mBAAS,CAC/BS,MAAO,GACPC,YAAa,KAH4B,mBACpCC,EADoC,KAC9BC,EAD8B,OAKjBZ,mBAAS,IALQ,mBAKpCO,EALoC,KAK7BC,EAL6B,KAuBrC6C,EAAoB,SAAC3B,GACzBd,EAAQ,2BAAKD,GAAN,kBAAae,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAGvD,OACE,yBAAKQ,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,SACb,2BACEE,KAAK,OACLF,UAAU,eACVG,YAAY,qBACZZ,KAAK,QACLC,MAAOlB,EAAKF,MACZgC,SAAUY,KAGd,yBAAKhB,UAAU,SACb,2BACEE,KAAK,OACLF,UAAU,eACVG,YAAY,2BACZZ,KAAK,cACLC,MAAOlB,EAAKD,YACZ+B,SAAUY,KAGd,yBAAKhB,UAAU,SACb,4BACEE,KAAK,SACLF,UAAU,sCACVK,QA/CY,WACpB,GAAyB,KAArB/B,EAAKD,aAAqC,KAAfC,EAAKF,MAApC,CAIA,IAAMY,EAAY,yBAChBE,GAAIW,KAAKoB,OACN3C,GAFa,IAGhBsB,KAAM,IAAIC,KACV/B,YAAY,IAEdJ,EAAMwD,iBAAiBlC,GACvBb,EAAS,IACTI,EAAQ,CAAEH,MAAO,GAAIC,YAAa,UAXhCF,EAAS,sBA0CL,sBASJ,yBAAK6B,UAAU,OACb,yBAAKA,UAAU,UACZ9B,GACC,yBAAKiD,MAAM,qBAAqBlB,KAAK,SAClC/B,OChEFkD,EAAsB,SAAC1D,GAAW,IAAD,EAClBC,mBAAS,IADS,mBACrCS,EADqC,KAC9BiD,EAD8B,KAM5C,OACE,yBAAKrB,UAAU,oBACb,yBAAKA,UAAU,uBACb,4BACEA,UAAU,4BACVd,GAAG,gBACHmB,QAAS,kBAAM3C,EAAM4D,SAASlD,KAHhC,WAQF,2BACE8B,KAAK,OACLF,UAAU,eACVG,YAAY,GACZX,MAAOpB,EACPgC,SAnBqB,SAACf,GAC1BgC,EAAShC,EAAMC,OAAOE,YCmFX+B,MApFf,WAAgB,IAAD,EAC4B5D,mBAAS,CAChD,CACEuB,GAAI,IACJd,MAAO,sBACPC,YAAa,cACbuB,KAAM,IAAIC,KACV/B,YAAY,GAEd,CACEoB,GAAI,IACJd,MAAO,oBACPC,YAAa,cACbuB,KAAM,IAAIC,KACV/B,YAAY,GAEd,CACEoB,GAAI,IACJd,MAAO,iBACPC,YAAa,cACbuB,KAAM,IAAIC,KACV/B,YAAY,GAEd,CACEoB,GAAI,IACJd,MAAO,iBACPC,YAAa,cACbuB,KAAM,IAAIC,KACV/B,YAAY,KA5BH,mBACNgD,EADM,KACSU,EADT,OA+ByC7D,mBAAS,IA/BlD,mBA+BN8D,EA/BM,KA+BeC,EA/Bf,KAoEb,OAnCAC,qBAAU,WACRD,EAAuB,YAAIZ,MAC1B,CAACA,IAkCF,yBAAKd,UAAU,aACb,kBAAC,EAAD,CAAqBsB,SAjCH,SAAClD,GACrB,OAGOsD,EAHFtD,EAIH0C,EAAcc,QAAO,SAAC5C,GAAD,OACnBA,EAAaZ,MAAMyD,cAAc5C,SAASb,EAAMyD,kBAJpB,YAAIf,OAgClC,kBAAC,EAAD,CACEA,cAAeA,EACfI,iBAzBmB,SAAClC,GACxBwC,EAAgB,GAAD,mBAAKV,GAAL,CAAoB9B,QA0BjC,kBAAC,EAAD,CACE8B,cAAeW,EACfnB,oBAzBsB,SAACpB,GAC3BsC,EACEV,EAAcc,QAAO,SAAC5C,GAAD,OAAkBA,EAAaE,KAAOA,OAwBzDY,oBArBsB,SAACZ,EAAIS,GAC/B6B,EACEV,EAAcN,KAAI,SAACC,GACjB,OAAIA,EAAKvB,KAAOA,EACP4C,OAAOC,OAAOtB,EAAMd,GAEtBc,WCxDKuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9E,GACL+E,QAAQ/E,MAAMA,EAAMgF,c","file":"static/js/main.9a5e7a7c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Moment from 'react-moment';\n\nexport const AnnouncementListItem = (props) => {\n  const [isEdit, setEdit] = useState(false);\n  const [isSelected, setSelected] = useState(false);\n  const [similar, setSimilar] = useState([{}]);\n  const [error, setError] = useState('');\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n  });\n\n  const selectListItem = () => {\n    setSelected(!isSelected);\n    const topArr = [];\n\n    for (let i = 0; i < props.arrayOfannouncements.length; i++) {\n      if (\n        props.arrayOfannouncements[i].title\n          .split(' ')\n          .some((elemnt) =>\n            props.announcement.title.split(' ').includes(elemnt)\n          ) &&\n        props.arrayOfannouncements[i].description\n          .split(' ')\n          .some((elemnt) =>\n            props.announcement.description.split(' ').includes(elemnt)\n          ) &&\n        props.arrayOfannouncements[i].id !== props.announcement.id\n      ) {\n        if (topArr.length < 3) {\n          topArr.push(props.arrayOfannouncements[i]);\n        }\n      }\n    }\n    setSimilar(topArr);\n  };\n\n  const changeAnnouncementHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const editAnnouncements = () => {\n    setEdit(true);\n  };\n\n  const saveAnnouncements = () => {\n    if (form.description === '' || form.title === '') {\n      setError('enter all inputs');\n      return;\n    }\n    const newAnnouncement = {\n      ...form,\n      date: new Date(),\n      isSelected: isSelected,\n    };\n    props.changeAnnouncements(props.announcement.id, newAnnouncement);\n    setError('');\n    setEdit(false);\n    setForm({ title: '', description: '' });\n  };\n\n  const cancelAnnouncements = () => {\n    setEdit(false);\n  };\n\n  const announcementSection = () => {\n    if (!isEdit) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-10\">\n            <span onClick={selectListItem}>{props.announcement.title}</span>\n          </div>\n          <div className=\"col-2\">\n            <button\n              className=\"btn btn-outline-danger mr-1\"\n              type=\"button\"\n              onClick={() => props.deleteAnnouncements(props.announcement.id)}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n            <button\n              className=\"btn btn-outline-warning\"\n              type=\"button\"\n              onClick={editAnnouncements}\n            >\n              <i className=\"fa fa-pencil\"></i>\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"row\">\n        <div className=\"col-10\">\n          {error && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {error}\n            </div>\n          )}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"ToDo title\"\n            name=\"title\"\n            value={form.title}\n            onChange={changeAnnouncementHandler}\n          />\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"ToDo description\"\n            name=\"description\"\n            value={form.description}\n            onChange={changeAnnouncementHandler}\n          />\n        </div>\n        <div className=\"col-2 \">\n          <button\n            className=\"btn btn-outline-danger mr-1\"\n            type=\"button\"\n            onClick={cancelAnnouncements}\n          >\n            <i className=\"fa fa-ban\"></i>\n          </button>\n          <button\n            className=\"btn btn-outline-success\"\n            type=\"button\"\n            onClick={saveAnnouncements}\n          >\n            <i className=\"fa fa-check-circle\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const selectedAnnouncementSection = () => {\n    if (isSelected) {\n      return (\n        <div className=\"container\">\n          <div className=\"row mt-2 border border-secondary\">\n            <div className=\"col\">\n              <span>Description: {props.announcement.description}</span>\n            </div>\n            <div className=\"col-3\">\n              Create data:\n              <Moment format=\"YYYY/MM/DD\">{props.announcement.date}</Moment>\n            </div>\n          </div>\n          <div className=\"row mt-2 border border-secondary\">\n            <div className=\"col\">\n              <div className=\"row\">\n                <div className=\"col\">Similar announcement:</div>\n              </div>\n              <div className=\"row mt-2\">\n                <div className=\"col off-set-1\">\n                  {similar.length > 0\n                    ? similar.map((item, index) => (\n                        <div className=\"row mt-2\" key={index + item.id}>\n                          <div className=\"col-6\">{`id: ${item.id} `}</div>\n                          <div className=\"col-6\">{`title: ${item.title}`}</div>\n                        </div>\n                      ))\n                    : 'not found'}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <li className=\"list-group-item mt-1\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          {announcementSection()}\n          {selectedAnnouncementSection()}\n        </div>\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\nimport { AnnouncementListItem } from './AnnouncementListItem';\n\nexport const AnnouncementList = (props) => {\n  return (\n    <div className=\"row mt-4\">\n      <div className=\"col\">\n        <ul className=\"list-group\">\n          {props.announcements.map((announcement) => {\n            return (\n              <AnnouncementListItem\n                arrayOfannouncements={props.announcements}\n                announcement={announcement}\n                key={announcement.id}\n                saveAnnouncements={props.saveAnnouncements}\n                deleteAnnouncements={props.deleteAnnouncements}\n                changeAnnouncements={props.changeAnnouncements}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nexport const CreateAnnouncement = (props) => {\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n  });\n  const [error, setError] = useState('');\n\n  const createHendler = () => {\n    if (form.description === '' || form.title === '') {\n      setError('enter all inputs');\n      return;\n    }\n    const announcement = {\n      id: Date.now(),\n      ...form,\n      date: new Date(),\n      isSelected: false,\n    };\n    props.addAnnouncements(announcement);\n    setError('');\n    setForm({ title: '', description: '' });\n  };\n\n  const changeFormHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n        <div className=\"col-5\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Announcement title\"\n            name=\"title\"\n            value={form.title}\n            onChange={changeFormHandler}\n          />\n        </div>\n        <div className=\"col-5\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Announcement description\"\n            name=\"description\"\n            value={form.description}\n            onChange={changeFormHandler}\n          />\n        </div>\n        <div className=\"col-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary float-right\"\n            onClick={createHendler}\n          >\n            Add announcement\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-10\">\n          {error && (\n            <div class=\"alert alert-danger\" role=\"alert\">\n              {error}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nexport const SearchAnnouncements = (props) => {\n  const [title, setTitle] = useState('');\n\n  const valueChangeHandler = (event) => {\n    setTitle(event.target.value);\n  };\n  return (\n    <div className=\"input-group mt-3\">\n      <div className=\"input-group-prepend\">\n        <button\n          className=\"btn btn-outline-secondary\"\n          id=\"button-addon1\"\n          onClick={() => props.onSearch(title)}\n        >\n          Search\n        </button>\n      </div>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"\"\n        value={title}\n        onChange={valueChangeHandler}\n      />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { AnnouncementList } from './components/AnnouncementList';\nimport { CreateAnnouncement } from './components/CreateAnnouncement';\nimport { SearchAnnouncements } from './components/SearchAnnouncements';\n\nfunction App() {\n  const [announcements, setAnnouncement] = useState([\n    {\n      id: '1',\n      title: 'titfegefgefgefgefel',\n      description: 'description',\n      date: new Date(),\n      isSelected: false,\n    },\n    {\n      id: '2',\n      title: 'sdfsdf 123 sdfsdf',\n      description: 'description',\n      date: new Date(),\n      isSelected: false,\n    },\n    {\n      id: '3',\n      title: '123 dsfsd sdf ',\n      description: 'description',\n      date: new Date(),\n      isSelected: false,\n    },\n    {\n      id: '4',\n      title: '123 dsfsd sdf ',\n      description: 'description',\n      date: new Date(),\n      isSelected: false,\n    },\n  ]);\n  const [filterAnnouncements, setFilterAnnouncements] = useState([]);\n\n  useEffect(() => {\n    setFilterAnnouncements([...announcements]);\n  }, [announcements]);\n\n  const searchHendler = (title) => {\n    if (!title) {\n      return setFilterAnnouncements([...announcements]);\n    }\n    return setFilterAnnouncements(\n      announcements.filter((announcement) =>\n        announcement.title.toLowerCase().includes(title.toLowerCase())\n      )\n    );\n  };\n\n  const addAnnouncements = (announcement) => {\n    setAnnouncement([...announcements, announcement]);\n  };\n\n  const deleteAnnouncements = (id) => {\n    setAnnouncement(\n      announcements.filter((announcement) => announcement.id !== id)\n    );\n  };\n  const changeAnnouncements = (id, newAnnouncement) => {\n    setAnnouncement(\n      announcements.map((item) => {\n        if (item.id === id) {\n          return Object.assign(item, newAnnouncement);\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <SearchAnnouncements onSearch={searchHendler} />\n      <CreateAnnouncement\n        announcements={announcements}\n        addAnnouncements={addAnnouncements}\n      />\n      <AnnouncementList\n        announcements={filterAnnouncements}\n        deleteAnnouncements={deleteAnnouncements}\n        changeAnnouncements={changeAnnouncements}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}