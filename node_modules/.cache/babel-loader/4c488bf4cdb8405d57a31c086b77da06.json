{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Documents/workspace/react-announcement/src/components/Announcement.js\";\nimport React, { useState } from 'react';\nimport { AnnouncementItem } from './AnnouncementItem';\nexport const Announcement = () => {\n  const [form, setForm] = useState({\n    title: '',\n    description: ''\n  });\n  const [editForm, setEditForm] = useState({\n    title: '',\n    description: ''\n  });\n\n  const changeFormHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const changeEditFormHandler = event => {\n    setEditForm({ ...editForm,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const addAnnouncementHendler = () => {\n    setAnnouncement([...announcements, {\n      id: Date.now(),\n      title: form.title,\n      description: form.description,\n      date: new Date(),\n      isSelected: false\n    }]);\n    setForm({\n      title: '',\n      description: ''\n    });\n  };\n\n  const deleteAnnouncementHendler = id => {\n    setAnnouncement(announcements.filter(announcement => announcement.id !== id));\n  };\n\n  const saveEditHandler = id => {\n    saveEditHandler(announcements.map(announcement => {\n      if (announcement.id === id) {\n        announcement.description = editForm.description;\n        announcement.title = editForm.title;\n        announcement.date = new Date();\n      }\n    }));\n  };\n\n  const selectHandler = id => {\n    // setAnnouncement(\n    //   announcements.map((announcement) => {\n    //     if (announcement.id === id) {\n    //       announcement.isSelected = !announcement.isSelected;\n    //     }\n    //   })\n    //);\n    announcements.map(i => i.id == id && console.log(i.isSelected));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, announcements.map(announcement => {\n    return /*#__PURE__*/React.createElement(AnnouncementItem, {\n      announcement: announcement,\n      key: announcement.id,\n      deleteAnnouncementHendler: deleteAnnouncementHendler,\n      saveEditHandler: saveEditHandler,\n      selectHandler: selectHandler,\n      changeEditFormHandler: changeEditFormHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    });\n  })))));\n};","map":{"version":3,"sources":["/Users/roman/Documents/workspace/react-announcement/src/components/Announcement.js"],"names":["React","useState","AnnouncementItem","Announcement","form","setForm","title","description","editForm","setEditForm","changeFormHandler","event","target","name","value","changeEditFormHandler","addAnnouncementHendler","setAnnouncement","announcements","id","Date","now","date","isSelected","deleteAnnouncementHendler","filter","announcement","saveEditHandler","map","selectHandler","i","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { AnnouncementItem } from './AnnouncementItem';\n\nexport const Announcement = () => {\n  const [form, setForm] = useState({ title: '', description: '' });\n  const [editForm, setEditForm] = useState({ title: '', description: '' });\n\n  const changeFormHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n  const changeEditFormHandler = (event) => {\n    setEditForm({ ...editForm, [event.target.name]: event.target.value });\n  };\n  const addAnnouncementHendler = () => {\n    setAnnouncement([\n      ...announcements,\n      {\n        id: Date.now(),\n        title: form.title,\n        description: form.description,\n        date: new Date(),\n        isSelected: false,\n      },\n    ]);\n    setForm({ title: '', description: '' });\n  };\n  const deleteAnnouncementHendler = (id) => {\n    setAnnouncement(\n      announcements.filter((announcement) => announcement.id !== id)\n    );\n  };\n  const saveEditHandler = (id) => {\n    saveEditHandler(\n      announcements.map((announcement) => {\n        if (announcement.id === id) {\n          announcement.description = editForm.description;\n          announcement.title = editForm.title;\n          announcement.date = new Date();\n        }\n      })\n    );\n  };\n  const selectHandler = (id) => {\n    // setAnnouncement(\n    //   announcements.map((announcement) => {\n    //     if (announcement.id === id) {\n    //       announcement.isSelected = !announcement.isSelected;\n    //     }\n    //   })\n    //);\n    announcements.map((i) => i.id == id && console.log(i.isSelected));\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-4\">\n        <div className=\"col\">\n          <ul className=\"list-group\">\n            {announcements.map((announcement) => {\n              return (\n                <AnnouncementItem\n                  announcement={announcement}\n                  key={announcement.id}\n                  deleteAnnouncementHendler={deleteAnnouncementHendler}\n                  saveEditHandler={saveEditHandler}\n                  selectHandler={selectHandler}\n                  changeEditFormHandler={changeEditFormHandler}\n                />\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}